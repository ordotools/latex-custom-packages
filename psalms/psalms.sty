\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{psalms}[2024/12/19 v1.0 Latin Psalm Typesetting with Gregorian Chant Tones]

% Package options
\newif\ifpsalms@debug
\newif\ifpsalms@orthographic
\newif\ifpsalms@versenumbers
\newif\ifpsalms@gloriapatri
\newif\ifpsalms@dropcap
\DeclareOption{debug}{\psalms@debugtrue}
\DeclareOption{orthographic}{\psalms@orthographictrue}
\DeclareOption{positional}{\psalms@orthographicfalse}
\DeclareOption{versenumbers}{\psalms@versenumberstrue}
\DeclareOption{gloriapatri}{\psalms@gloriapatritrue}
\DeclareOption{dropcap}{\psalms@dropcaptrue}
\ProcessOptions\relax

% Engine / language requirements
\RequirePackage{fontspec}
\RequirePackage[latin]{babel}
\RequirePackage{xparse}
\RequirePackage{enumitem}
\RequirePackage{lettrine}

% Load Lua module
\directlua{psalmtones = require("psalmtones")}

% Set debug mode if requested
\ifpsalms@debug
  \directlua{psalmtones.debug = true}
\fi

% Directory & extension for psalm text files
\newcommand*\PsalmDir{psalms}
\newcommand*\PsalmExt{txt}

% Divider and joiner
\newcommand*\PsalmHalfDivider{*}
\newcommand*\PsalmJoiner{} % "-" to visualize syllables while debugging

% Styles
\newcommand*\PsalmStyleAccent{\bfseries}
\newcommand*\PsalmStylePrep{\itshape}
\newcommand*\PsalmStyleOther{} % normal

% Accent mode control (positional | orthographic)
\newcommand*\PsalmAccentMode{positional}
\newcommand*\SetPsalmAccentMode[1]{\renewcommand*\PsalmAccentMode{#1}}

% Set accent mode based on package option
\ifpsalms@orthographic
  \SetPsalmAccentMode{orthographic}
\fi

% Global options
\newcommand*\PsalmVerseNumbers{false}
\newcommand*\PsalmGloriaPatri{false}
\newcommand*\PsalmSuppressSyllabification{false}
\newcommand*\PsalmDropcap{false}

% Commands to control global options
\newcommand*\SetPsalmVerseNumbers[1]{\renewcommand*\PsalmVerseNumbers{#1}}
\newcommand*\SetPsalmGloriaPatri[1]{\renewcommand*\PsalmGloriaPatri{#1}}
\newcommand*\SetPsalmDropcap[1]{\renewcommand*\PsalmDropcap{#1}}

% Dropcap style customization
% Default values for lettrine
\newcommand*\PsalmDropcapLines{2}
\newcommand*\PsalmDropcapLhang{0}
\newcommand*\PsalmDropcapLoversize{0}
\newcommand*\PsalmDropcapLraise{0}

% Verse number style customization
% Default style: compact, no left margin
\newlist{psalmverses}{enumerate}{1}
\setlist[psalmverses]{label=\arabic*.,leftmargin=*,nosep,itemsep=0.5ex}

% Command to customize verse number style
% Usage: \SetPsalmVerseStyle{label=\Roman*.,leftmargin=2em,...}
\newcommand*\SetPsalmVerseStyle[1]{\setlist[psalmverses]{#1}}

% Set global options based on package options
\ifpsalms@versenumbers
  \SetPsalmVerseNumbers{true}
\fi
\ifpsalms@gloriapatri
  \SetPsalmGloriaPatri{true}
\fi
\ifpsalms@dropcap
  \SetPsalmDropcap{true}
\fi

% Local command to suppress syllabification for a particular psalm
\newcommand*\SuppressSyllabification{\renewcommand*\PsalmSuppressSyllabification{true}}
\newcommand*\EnableSyllabification{\renewcommand*\PsalmSuppressSyllabification{false}}

% Process one line (kept for ad-hoc tests)
\newcommand*\PsalmLine[1]{\directlua{psalmtones.process_line([[#1]])}}

% Main psalm command: \psalm{<number>}{<mode>}
% Example: \psalm{118}{8G}
\NewDocumentCommand{\psalm}{m m}{%
  % capture args into expandable macros so [[...]] gets plain text
  \edef\psalmnum{\unexpanded{#1}}%
  \edef\psalmpreset{\unexpanded{#2}}%
  \begingroup
    % also capture config macros (dir/ext/accent) now, so Lua gets strings
    \edef\psalmdir{\unexpanded{\PsalmDir}}%
    \edef\psalmext{\unexpanded{\PsalmExt}}%
    \edef\psalmaccent{\unexpanded{\PsalmAccentMode}}%
    \edef\psalmversenumbers{\unexpanded{\PsalmVerseNumbers}}%
    \edef\psalmgloriapatri{\unexpanded{\PsalmGloriaPatri}}%
    \edef\psalmsuppresssyll{\unexpanded{\PsalmSuppressSyllabification}}%
    \edef\psalmdropcap{\unexpanded{\PsalmDropcap}}%
    \edef\psalmdropcaplines{\unexpanded{\PsalmDropcapLines}}%
    \edef\psalmdropcaplhang{\unexpanded{\PsalmDropcapLhang}}%
    \edef\psalmdropcaploversize{\unexpanded{\PsalmDropcapLoversize}}%
    \edef\psalmdropcaplraise{\unexpanded{\PsalmDropcapLraise}}%
    \directlua{
      local preset = [[\psalmpreset]]
      if preset == "" then preset = nil end
      psalmtones.run_psalm([[\psalmnum]], preset, [[\psalmdir]], [[\psalmext]], [[\psalmaccent]], [[\psalmversenumbers]], [[\psalmgloriapatri]], [[\psalmsuppresssyll]], [[\psalmdropcap]], [[\psalmdropcaplines]], [[\psalmdropcaplhang]], [[\psalmdropcaploversize]], [[\psalmdropcaplraise]])
    }%
  \endgroup
}

% Legacy command for backward compatibility: \psalm[<preset>]{<number>}
\NewDocumentCommand{\psalmlegacy}{O{} m}{%
  % capture args into expandable macros so [[...]] gets plain text
  \edef\psalmpreset{\unexpanded{#1}}%
  \edef\psalmnum{\unexpanded{#2}}%
  \begingroup
    % also capture config macros (dir/ext/accent) now, so Lua gets strings
    \edef\psalmdir{\unexpanded{\PsalmDir}}%
    \edef\psalmext{\unexpanded{\PsalmExt}}%
    \edef\psalmaccent{\unexpanded{\PsalmAccentMode}}%
    \edef\psalmversenumbers{\unexpanded{\PsalmVerseNumbers}}%
    \edef\psalmgloriapatri{\unexpanded{\PsalmGloriaPatri}}%
    \edef\psalmsuppresssyll{\unexpanded{\PsalmSuppressSyllabification}}%
    \edef\psalmdropcap{\unexpanded{\PsalmDropcap}}%
    \edef\psalmdropcaplines{\unexpanded{\PsalmDropcapLines}}%
    \edef\psalmdropcaplhang{\unexpanded{\PsalmDropcapLhang}}%
    \edef\psalmdropcaploversize{\unexpanded{\PsalmDropcapLoversize}}%
    \edef\psalmdropcaplraise{\unexpanded{\PsalmDropcapLraise}}%
    \directlua{
      local preset = [[\psalmpreset]]
      if preset == "" then preset = nil end
      psalmtones.run_psalm([[\psalmnum]], preset, [[\psalmdir]], [[\psalmext]], [[\psalmaccent]], [[\psalmversenumbers]], [[\psalmgloriapatri]], [[\psalmsuppresssyll]], [[\psalmdropcap]], [[\psalmdropcaplines]], [[\psalmdropcaplhang]], [[\psalmdropcaploversize]], [[\psalmdropcaplraise]])
    }%
  \endgroup
}

\endinput
